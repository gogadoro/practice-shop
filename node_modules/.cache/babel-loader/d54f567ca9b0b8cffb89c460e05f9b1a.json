{"ast":null,"code":"import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport { getCurrentUser, setUserDbFromAuth } from '../../utils/firebase/firebase';\nimport { signInFaild, signInSuccess } from \"./user.action\";\nimport { USER_ACTION_TYPE } from \"./user.types\";\nexport function* onCheckUserSession() {\n  yield takeLatest(USER_ACTION_TYPE.SIGN_IN_SUCCESS, call(isUserAuthentication));\n}\nexport function* isUserAuthentication() {\n  try {\n    const userAuth = yield call(getCurrentUser, userAuth);\n    if (!userAuth) return;\n    yield call(getSnapshotFromUser);\n  } catch (error) {\n    yield put(signInFaild(error));\n  }\n}\nexport function* getSnapshotFromUser(userAuth, additionalDetails) {\n  try {\n    const userSnapshot = yield call(setUserDbFromAuth, userAuth, additionalDetails);\n    console.log(userSnapshot);\n    console.log(userSnapshot.data()); // if (userSnapshot) {\n    //    yield put(signInSuccess(userSnapshot({userSnapshot.id: userAuth.id})))\n    // }\n  } catch (error) {\n    yield put(signInFaild(error));\n  }\n}\nexport function* userSaga() {\n  yield all([call(onCheckUserSession)]);\n}","map":{"version":3,"names":["takeLatest","put","all","call","getCurrentUser","setUserDbFromAuth","signInFaild","signInSuccess","USER_ACTION_TYPE","onCheckUserSession","SIGN_IN_SUCCESS","isUserAuthentication","userAuth","getSnapshotFromUser","error","additionalDetails","userSnapshot","console","log","data","userSaga"],"sources":["/Users/5e9e/Desktop/projects/web_apps/react/capston/practice-shop/src/store/user/user.saga.js"],"sourcesContent":["import { takeLatest, put, all, call } from \"redux-saga/effects\";\nimport  {getCurrentUser, setUserDbFromAuth} from '../../utils/firebase/firebase'\nimport { signInFaild, signInSuccess } from \"./user.action\";\nimport { USER_ACTION_TYPE } from \"./user.types\";\n\n\nexport function* onCheckUserSession () {\n   yield takeLatest(USER_ACTION_TYPE.SIGN_IN_SUCCESS, call(isUserAuthentication))\n}\n\nexport function* isUserAuthentication () {\n   try {\n      const userAuth = yield call(getCurrentUser, userAuth);\n      if(!userAuth) return;\n      yield call(getSnapshotFromUser)\n   } catch (error) {\n      yield put(signInFaild(error))\n   }\n   \n}\n\nexport function* getSnapshotFromUser (userAuth, additionalDetails) {\n   try {\n      const userSnapshot = yield call(setUserDbFromAuth, userAuth, additionalDetails)\n      \n      console.log(userSnapshot)\n      console.log(userSnapshot.data())\n      // if (userSnapshot) {\n      //    yield put(signInSuccess(userSnapshot({userSnapshot.id: userAuth.id})))\n      // }\n   } catch(error) {\n      yield put(signInFaild(error));\n   }\n}\n\nexport function* userSaga () {\n   yield all([call(onCheckUserSession)]);\n}"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,GAArB,EAA0BC,GAA1B,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,cAAT,EAAyBC,iBAAzB,QAAiD,+BAAjD;AACA,SAASC,WAAT,EAAsBC,aAAtB,QAA2C,eAA3C;AACA,SAASC,gBAAT,QAAiC,cAAjC;AAGA,OAAO,UAAUC,kBAAV,GAAgC;EACpC,MAAMT,UAAU,CAACQ,gBAAgB,CAACE,eAAlB,EAAmCP,IAAI,CAACQ,oBAAD,CAAvC,CAAhB;AACF;AAED,OAAO,UAAUA,oBAAV,GAAkC;EACtC,IAAI;IACD,MAAMC,QAAQ,GAAG,MAAMT,IAAI,CAACC,cAAD,EAAiBQ,QAAjB,CAA3B;IACA,IAAG,CAACA,QAAJ,EAAc;IACd,MAAMT,IAAI,CAACU,mBAAD,CAAV;EACF,CAJD,CAIE,OAAOC,KAAP,EAAc;IACb,MAAMb,GAAG,CAACK,WAAW,CAACQ,KAAD,CAAZ,CAAT;EACF;AAEH;AAED,OAAO,UAAUD,mBAAV,CAA+BD,QAA/B,EAAyCG,iBAAzC,EAA4D;EAChE,IAAI;IACD,MAAMC,YAAY,GAAG,MAAMb,IAAI,CAACE,iBAAD,EAAoBO,QAApB,EAA8BG,iBAA9B,CAA/B;IAEAE,OAAO,CAACC,GAAR,CAAYF,YAAZ;IACAC,OAAO,CAACC,GAAR,CAAYF,YAAY,CAACG,IAAb,EAAZ,EAJC,CAKD;IACA;IACA;EACF,CARD,CAQE,OAAML,KAAN,EAAa;IACZ,MAAMb,GAAG,CAACK,WAAW,CAACQ,KAAD,CAAZ,CAAT;EACF;AACH;AAED,OAAO,UAAUM,QAAV,GAAsB;EAC1B,MAAMlB,GAAG,CAAC,CAACC,IAAI,CAACM,kBAAD,CAAL,CAAD,CAAT;AACF"},"metadata":{},"sourceType":"module"}
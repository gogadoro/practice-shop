{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc, collection, writeBatch } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCR8wdcaCzNTJHa9yoOST241p3hOOD8Fpo\",\n  authDomain: \"practice-shop-db-1ad74.firebaseapp.com\",\n  projectId: \"practice-shop-db-1ad74\",\n  storageBucket: \"practice-shop-db-1ad74.appspot.com\",\n  messagingSenderId: \"631247507579\",\n  appId: \"1:631247507579:web:cb6839dc34037bffbed2de\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst GoogleProvider = new GoogleAuthProvider();\nexport const auth = getAuth();\nexport const signIn_GooglePopup = () => signInWithPopup(auth, GoogleProvider);\nexport const signIn_GoogleRedirect = () => signInWithRedirect(auth, GoogleProvider);\nexport const db = getFirestore();\nexport const addCollectionAndDocuments = async (collectionKey, objectToAdd) => {\n  const collectionRef = collection(db, collectionKey);\n  const batch = writeBatch(db);\n  objectToAdd.forEach(object => {\n    const docRef = doc(collectionRef, object.title.toLowerCase());\n    batch.set(docRef, object);\n  });\n  await batch.commit();\n  console.log('done');\n};\nexport const setUserDbFromAuth = async function (userAuth) {\n  let additionalInfor = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (!userAuth) return;\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  const userSnapshot = await getDoc(userDocRef);\n\n  if (!userSnapshot.exists()) {\n    const email = userAuth.email;\n    const displayName = userAuth.displayName;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        email,\n        displayName,\n        createdAt,\n        ...additionalInfor\n      });\n    } catch (eer) {\n      console.log('error creating the user', eer.message);\n    }\n  }\n\n  return userDocRef;\n};\nexport const createUserAuthWithEmailAndPassword = async (email, password) => {\n  if (!email | !password) {\n    console.log('이메일,암호가 전달되지 않음');\n    return;\n  }\n\n  return await createUserWithEmailAndPassword(auth, email, password);\n};\nexport const signInUserAuthWithEmailAndPassword = async (email, password) => {\n  if (!email | !password) {\n    console.log('이메일,암호가 전달되지 않음');\n    return;\n  }\n\n  return await signInWithEmailAndPassword(auth, email, password);\n};\nexport const signOutUser = async () => await signOut(auth);\nexport const onAuthStateChangedListener = callback => {\n  onAuthStateChanged(auth, callback);\n};","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","getFirestore","doc","getDoc","setDoc","collection","writeBatch","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","GoogleProvider","auth","signIn_GooglePopup","signIn_GoogleRedirect","db","addCollectionAndDocuments","collectionKey","objectToAdd","collectionRef","batch","forEach","object","docRef","title","toLowerCase","set","commit","console","log","setUserDbFromAuth","userAuth","additionalInfor","userDocRef","uid","userSnapshot","exists","email","displayName","createdAt","Date","eer","message","createUserAuthWithEmailAndPassword","password","signInUserAuthWithEmailAndPassword","signOutUser","onAuthStateChangedListener","callback"],"sources":["/Users/5e9e/Desktop/projects/web_apps/react/capston/practice-shop/src/utils/firebase/firebase.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport {\n    getAuth,\n    signInWithRedirect,\n    signInWithPopup,\n    GoogleAuthProvider,\n    createUserWithEmailAndPassword,\n    signInWithEmailAndPassword,\n    signOut,\n    onAuthStateChanged,\n} from 'firebase/auth'\n\nimport {\n    getFirestore,\n    doc,\n    getDoc,\n    setDoc,\n    collection,\n    writeBatch,\n} from 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCR8wdcaCzNTJHa9yoOST241p3hOOD8Fpo\",\n    authDomain: \"practice-shop-db-1ad74.firebaseapp.com\",\n    projectId: \"practice-shop-db-1ad74\",\n    storageBucket: \"practice-shop-db-1ad74.appspot.com\",\n    messagingSenderId: \"631247507579\",\n    appId: \"1:631247507579:web:cb6839dc34037bffbed2de\"\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst GoogleProvider = new GoogleAuthProvider();\n\nexport const auth = getAuth();\nexport const signIn_GooglePopup = () => signInWithPopup(auth, GoogleProvider)\nexport const signIn_GoogleRedirect = () => signInWithRedirect(auth, GoogleProvider)\n\n\nexport const db = getFirestore();\n\nexport const addCollectionAndDocuments = async (collectionKey, objectToAdd) => {\n    const collectionRef = collection(db, collectionKey)\n    const batch = writeBatch(db)\n\n    objectToAdd.forEach((object) => {\n        const docRef = doc(collectionRef, object.title.toLowerCase())\n        batch.set(docRef, object)\n    })\n\n    await batch.commit()\n    console.log('done')\n}\n\nexport const setUserDbFromAuth = async (userAuth, additionalInfor={}) => {\n    if (!userAuth) return;\n\n    const userDocRef = doc(db, 'users', userAuth.uid);\n    const userSnapshot = await getDoc(userDocRef)\n\n    if (!userSnapshot.exists()) {\n        const email = userAuth.email;\n        const displayName = userAuth.displayName;\n        const createdAt = new Date();\n\n        try {\n            await setDoc(\n                userDocRef,\n                {\n                    email,\n                    displayName,\n                    createdAt,\n                    ...additionalInfor\n                }\n            );\n        } catch (eer) {\n            console.log('error creating the user', eer.message);\n        }\n    }\n\n    return userDocRef;\n}\n\nexport const createUserAuthWithEmailAndPassword = async (email, password) => {\n    if (!email | !password) {\n        console.log('이메일,암호가 전달되지 않음');\n        return;\n    }\n\n    return await createUserWithEmailAndPassword(auth, email, password);\n}\n\nexport const signInUserAuthWithEmailAndPassword = async (email, password) => {\n    if (!email | !password) {\n        console.log('이메일,암호가 전달되지 않음');\n        return;\n    }\n\n    return await signInWithEmailAndPassword(auth, email, password);\n}\n\nexport const signOutUser = async() => await signOut(auth);\n\nexport const onAuthStateChangedListener = (callback) => {\n    onAuthStateChanged(auth, callback);\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}
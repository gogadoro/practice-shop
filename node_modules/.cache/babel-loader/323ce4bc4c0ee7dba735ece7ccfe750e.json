{"ast":null,"code":"import { initializeApp } from 'firebase/app';\nimport { getAuth, signInWithRedirect, signInWithPopup, GoogleAuthProvider, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from 'firebase/firestore';\nconst firebaseConfig = {\n  apiKey: \"AIzaSyCR8wdcaCzNTJHa9yoOST241p3hOOD8Fpo\",\n  authDomain: \"practice-shop-db-1ad74.firebaseapp.com\",\n  projectId: \"practice-shop-db-1ad74\",\n  storageBucket: \"practice-shop-db-1ad74.appspot.com\",\n  messagingSenderId: \"631247507579\",\n  appId: \"1:631247507579:web:cb6839dc34037bffbed2de\"\n};\nconst firebaseApp = initializeApp(firebaseConfig);\nconst GoogleProvider = new GoogleAuthProvider();\nexport const auth = getAuth();\nexport const signIn_GooglePopup = () => signInWithPopup(auth, GoogleProvider);\nexport const signIn_GoogleRedirect = () => signInWithRedirect(auth, GoogleProvider);\nexport const db = getFirestore();\nexport const setUserDbFromAuth = async userAuth => {\n  const userDocRef = doc(db, 'users', userAuth.uid);\n  console.log('docRef :', userDocRef);\n  const userSnapshot = await getDoc(userDocRef);\n  console.log('snapshot :', userSnapshot);\n  console.log(userSnapshot.exists());\n\n  if (!userSnapshot.exists()) {\n    const email = userAuth.email;\n    const displayName = userAuth.displayName;\n    const createdAt = new Date();\n\n    try {\n      await setDoc(userDocRef, {\n        email,\n        displayName,\n        createdAt\n      });\n    } catch (eer) {\n      console.log('error creating the user', eer.message);\n    }\n  }\n\n  return userDocRef;\n}; //","map":{"version":3,"names":["initializeApp","getAuth","signInWithRedirect","signInWithPopup","GoogleAuthProvider","createUserWithEmailAndPassword","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","firebaseApp","GoogleProvider","auth","signIn_GooglePopup","signIn_GoogleRedirect","db","setUserDbFromAuth","userAuth","userDocRef","uid","console","log","userSnapshot","exists","email","displayName","createdAt","Date","eer","message"],"sources":["/Users/5e9e/Desktop/projects/web_apps/react/capston/practice-shop/src/utils/firebase/firebase.js"],"sourcesContent":["import { initializeApp } from 'firebase/app';\nimport { \n    getAuth, \n    signInWithRedirect,\n    signInWithPopup,\n    GoogleAuthProvider,\n    createUserWithEmailAndPassword,\n    } from 'firebase/auth'\n\nimport {\n    getFirestore,\n    doc,\n    getDoc,\n    setDoc, } from 'firebase/firestore';\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCR8wdcaCzNTJHa9yoOST241p3hOOD8Fpo\",\n    authDomain: \"practice-shop-db-1ad74.firebaseapp.com\",\n    projectId: \"practice-shop-db-1ad74\",\n    storageBucket: \"practice-shop-db-1ad74.appspot.com\",\n    messagingSenderId: \"631247507579\",\n    appId: \"1:631247507579:web:cb6839dc34037bffbed2de\"\n};\n\nconst firebaseApp = initializeApp(firebaseConfig);\n\nconst GoogleProvider = new GoogleAuthProvider();\n\nexport const auth = getAuth();\nexport const signIn_GooglePopup = () => signInWithPopup(auth, GoogleProvider)\nexport const signIn_GoogleRedirect = () => signInWithRedirect(auth, GoogleProvider)\n\n\nexport const db = getFirestore();\n\nexport const setUserDbFromAuth = async (userAuth) => {\n    const userDocRef = doc(db, 'users', userAuth.uid);\n    console.log('docRef :', userDocRef);\n\n    const userSnapshot = await getDoc(userDocRef)\n    console.log('snapshot :', userSnapshot);\n    console.log(userSnapshot.exists());\n\n    if (!userSnapshot.exists()) {\n        const email = userAuth.email;\n        const displayName = userAuth.displayName;\n        const createdAt = new Date();\n\n        try {\n            await setDoc(userDocRef, {email, displayName, createdAt});\n        } catch (eer) {\n            console.log('error creating the user', eer.message);\n        }\n    }\n\n    return userDocRef;\n}\n\n//"],"mappings":"AAAA,SAASA,aAAT,QAA8B,cAA9B;AACA,SACIC,OADJ,EAEIC,kBAFJ,EAGIC,eAHJ,EAIIC,kBAJJ,EAKIC,8BALJ,QAMW,eANX;AAQA,SACIC,YADJ,EAEIC,GAFJ,EAGIC,MAHJ,EAIIC,MAJJ,QAImB,oBAJnB;AAMA,MAAMC,cAAc,GAAG;EACnBC,MAAM,EAAE,yCADW;EAEnBC,UAAU,EAAE,wCAFO;EAGnBC,SAAS,EAAE,wBAHQ;EAInBC,aAAa,EAAE,oCAJI;EAKnBC,iBAAiB,EAAE,cALA;EAMnBC,KAAK,EAAE;AANY,CAAvB;AASA,MAAMC,WAAW,GAAGjB,aAAa,CAACU,cAAD,CAAjC;AAEA,MAAMQ,cAAc,GAAG,IAAId,kBAAJ,EAAvB;AAEA,OAAO,MAAMe,IAAI,GAAGlB,OAAO,EAApB;AACP,OAAO,MAAMmB,kBAAkB,GAAG,MAAMjB,eAAe,CAACgB,IAAD,EAAOD,cAAP,CAAhD;AACP,OAAO,MAAMG,qBAAqB,GAAG,MAAMnB,kBAAkB,CAACiB,IAAD,EAAOD,cAAP,CAAtD;AAGP,OAAO,MAAMI,EAAE,GAAGhB,YAAY,EAAvB;AAEP,OAAO,MAAMiB,iBAAiB,GAAG,MAAOC,QAAP,IAAoB;EACjD,MAAMC,UAAU,GAAGlB,GAAG,CAACe,EAAD,EAAK,OAAL,EAAcE,QAAQ,CAACE,GAAvB,CAAtB;EACAC,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBH,UAAxB;EAEA,MAAMI,YAAY,GAAG,MAAMrB,MAAM,CAACiB,UAAD,CAAjC;EACAE,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BC,YAA1B;EACAF,OAAO,CAACC,GAAR,CAAYC,YAAY,CAACC,MAAb,EAAZ;;EAEA,IAAI,CAACD,YAAY,CAACC,MAAb,EAAL,EAA4B;IACxB,MAAMC,KAAK,GAAGP,QAAQ,CAACO,KAAvB;IACA,MAAMC,WAAW,GAAGR,QAAQ,CAACQ,WAA7B;IACA,MAAMC,SAAS,GAAG,IAAIC,IAAJ,EAAlB;;IAEA,IAAI;MACA,MAAMzB,MAAM,CAACgB,UAAD,EAAa;QAACM,KAAD;QAAQC,WAAR;QAAqBC;MAArB,CAAb,CAAZ;IACH,CAFD,CAEE,OAAOE,GAAP,EAAY;MACVR,OAAO,CAACC,GAAR,CAAY,yBAAZ,EAAuCO,GAAG,CAACC,OAA3C;IACH;EACJ;;EAED,OAAOX,UAAP;AACH,CArBM,C,CAuBP"},"metadata":{},"sourceType":"module"}
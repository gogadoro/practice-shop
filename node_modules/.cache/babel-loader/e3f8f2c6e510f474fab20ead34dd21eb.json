{"ast":null,"code":"import { compose, legacy_createStore as createStore, applyMiddleware } from 'redux';\nimport logger from 'redux-logger';\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport { rootReducer } from './root-reducer';\nimport createSagaMiddleware from 'redux-saga';\nimport { rootSaga } from './redux.saga';\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['cart']\n};\nconst sagaMiddleware = createSagaMiddleware();\nconst persistingReducer = persistReducer(persistConfig, rootReducer);\nconst middlewares = [process.env.NODE_ENV === 'development' && logger, sagaMiddleware].filter(Boolean);\nconst composedEnhancers = compose(applyMiddleware(...middlewares));\nexport const store = createStore(persistingReducer, undefined, composedEnhancers);\nsagaMiddleware.run(rootSaga);\nexport const persistor = persistStore(store);","map":{"version":3,"names":["compose","legacy_createStore","createStore","applyMiddleware","logger","persistStore","persistReducer","storage","rootReducer","createSagaMiddleware","rootSaga","persistConfig","key","whitelist","sagaMiddleware","persistingReducer","middlewares","process","env","NODE_ENV","filter","Boolean","composedEnhancers","store","undefined","run","persistor"],"sources":["/Users/5e9e/Desktop/projects/web_apps/react/capston/practice-shop/src/store/store.js"],"sourcesContent":["import { compose, legacy_createStore as createStore, applyMiddleware} from 'redux'\nimport logger from 'redux-logger'\nimport {persistStore, persistReducer} from 'redux-persist'\nimport storage from 'redux-persist/lib/storage'\nimport { rootReducer } from './root-reducer'\nimport createSagaMiddleware from 'redux-saga'\nimport { rootSaga } from './redux.saga'\n\nconst persistConfig = {\n  key: 'root',\n  storage,\n  whitelist: ['cart']\n}\nconst sagaMiddleware= createSagaMiddleware();\n\nconst persistingReducer = persistReducer(persistConfig, rootReducer)\n\nconst middlewares = [process.env.NODE_ENV === 'development' && logger, sagaMiddleware].filter(Boolean)\n\nconst composedEnhancers = compose(applyMiddleware(...middlewares))\n\nexport const store = createStore(persistingReducer, undefined, composedEnhancers)\n\nsagaMiddleware.run(rootSaga)\n\nexport const persistor = persistStore(store)\n"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,kBAAkB,IAAIC,WAAxC,EAAqDC,eAArD,QAA2E,OAA3E;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,YAAR,EAAsBC,cAAtB,QAA2C,eAA3C;AACA,OAAOC,OAAP,MAAoB,2BAApB;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,MAAMC,aAAa,GAAG;EACpBC,GAAG,EAAE,MADe;EAEpBL,OAFoB;EAGpBM,SAAS,EAAE,CAAC,MAAD;AAHS,CAAtB;AAKA,MAAMC,cAAc,GAAEL,oBAAoB,EAA1C;AAEA,MAAMM,iBAAiB,GAAGT,cAAc,CAACK,aAAD,EAAgBH,WAAhB,CAAxC;AAEA,MAAMQ,WAAW,GAAG,CAACC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,IAA0Cf,MAA3C,EAAmDU,cAAnD,EAAmEM,MAAnE,CAA0EC,OAA1E,CAApB;AAEA,MAAMC,iBAAiB,GAAGtB,OAAO,CAACG,eAAe,CAAC,GAAGa,WAAJ,CAAhB,CAAjC;AAEA,OAAO,MAAMO,KAAK,GAAGrB,WAAW,CAACa,iBAAD,EAAoBS,SAApB,EAA+BF,iBAA/B,CAAzB;AAEPR,cAAc,CAACW,GAAf,CAAmBf,QAAnB;AAEA,OAAO,MAAMgB,SAAS,GAAGrB,YAAY,CAACkB,KAAD,CAA9B"},"metadata":{},"sourceType":"module"}